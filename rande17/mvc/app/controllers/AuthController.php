<?php

class AuthController extends Controller
{


    public function index($param)
    {
        $this->view('auth/login');
    }

    public function other($param1 = 'first parameter', $param2 = 'second parameter')
    {
        $user = $this->model('User');
        $user->name = $param1;
        $viewbag['username'] = $user->name;
        $this->view('auth/index', $viewbag);
    }

    public function model($model)
    {
        return parent::model($model); // TODO: Change the autogenerated stub
    }

    public function restricted()
    {
        echo 'Welcome - you must be logged in';
    }

    public function authtenticate()
    {
        if ($this->post()) {
            $DB = new Database();
            $user = $_POST['username'] ?? null;
            $password = $_POST['password'] ?? null;
            $users = [];
            $stmt = $DB->conn->prepare("SELECT * FROM user WHERE username=? ");
            $stmt->bindValue(1, $user, PDO::PARAM_STR);
            $stmt->execute();
            $users = $stmt->fetch();
            $viewbag = new ArrayIterator();
            $pass = hash('sha512', $password . $users['salt']);
            if ($users['ID'] == NULL || $users['password'] != $pass) {
                $viewbag['err'] = "login incorrect";
                $this->view('auth/login', $viewbag);
            } else {
                if (!isset($_SESSION)) {
                    session_start();
                }
                $_SESSION['logged_in'] = true;
                $_SESSION['ID'] = $users['ID'];
                $_SESSION['name'] = $users['username'];
                header("location: /mvc/public/home/home/index/");

            }
        }
    }

    /**
     *
     */
    function login()
    {
        $DB = new Database();
        $user = $_POST['username'] ?? null;
        $password = $_POST['password'] ?? null;
        $users = [];
        $stmt = $DB->conn->prepare("SELECT * FROM user WHERE username=? ");
        $stmt->bindValue(1, $user, PDO::PARAM_STR);
        $stmt->execute();
        $users = $stmt->fetch();
        $viewbag = new ArrayIterator();
        $pass = hash('sha512', $password . $users['salt']);
        if ($users['ID'] == NULL || $users['password'] != $pass) {
            $viewbag['err'] = "login incorrect";
            $this->view('auth/login', $viewbag);
        } else {
            if (!isset($_SESSION)) {
                session_start();
            }
            $_SESSION['logged_in'] = true;
            $_SESSION['ID'] = $users['ID'];
            $_SESSION['name'] = $users['username'];
            $this->view('home/index', $viewbag);

        }
    }

    function confirmsignup()
    {
        $username = htmlentities($_POST['username']);
        $password = htmlentities($_POST['password']);
        $mail = htmlentities($_POST['mail']);
        $fname = htmlentities($_POST['fname']);
        $lname = htmlentities($_POST['lname']);
        $phone = htmlentities($_POST['phone']);
        $city = htmlentities($_POST['city']);
        $zip = htmlentities($_POST['zip']);


        $DB = new Database();
        $ID = $this->getUUID();
        $salt = $this->getSalt();
        //echo $salt;
        $password = hash('sha512', $password . $salt);
        $stmt = $DB->conn->prepare("SELECT * FROM user WHERE username LIKE :username OR mail LIKE :mail");
        $stmt->bindValue(':username', $username);
        $stmt->bindValue(':mail', $mail);
        $stmt->execute();
        if ($stmt->rowCount() != 0) {
            $bag['err'] = "Sorry Username or Email is already taken";
            $this->view('auth/signup', $bag);
        } else {

            if ($stmt = $DB->conn->prepare("INSERT INTO user (ID, username, password, salt, mail, fname, lname, phone, city, zip) VALUES (:ID, :username, :password, :salt, :mail, :fname, :lname, :phone, :city, :zip)")) {
                $stmt->bindValue(':ID', $ID);
                $stmt->bindValue(':username', $username);
                $stmt->bindValue(':password', $password);
                $stmt->bindValue(':salt', $salt);
                $stmt->bindValue(':mail', $mail);
                $stmt->bindValue(':fname', $fname);
                $stmt->bindValue(':lname', $lname);
                $stmt->bindValue(':phone', $phone);
                $stmt->bindValue(':city', $city);
                $stmt->bindValue(':zip', $zip);
                $stmt->execute();
            }
            header("location: /mvc/public/home/auth/login/");
        }
    }

    private function getSalt($length = 64)
    {
        $char = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        $charlength = strlen($char);
        $salt = '';
        for ($i = 0; $i < $charlength; $i++) {
            $salt .= $char[mt_rand(0, $charlength - 1)];
        }
        return $salt;
    }

    function logout()
    {
        session_start();
        session_destroy();
        header("location: /mvc/public/home/auth/login/");
    }

    function signup()
    {
        $this->view('auth/signup');
    }
}